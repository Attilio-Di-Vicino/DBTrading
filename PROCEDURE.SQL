/*
    1- ESTRATTO CONTO
*/
CREATE OR REPLACE PROCEDURE ESTRATTO_CONTO(CODICEFISCALE_ IN VARCHAR)
IS
    NOME_ VARCHAR(30);
    COGNOME_ VARCHAR(30);
    MOV VARCHAR(20);
BEGIN

    SELECT NOME,COGNOME
    INTO NOME_,COGNOME_
    FROM UTENTE
    WHERE CF = CODICEFISCALE_;

    DBMS_OUTPUT.PUT_LINE('ESTRATTO CONTO DI ' || NOME_ || ' ' || COGNOME_);
    FOR i IN(
                SELECT ID_ORDINE,QUANTITA_M,DATA_M,FEE_M,TIPO_MOVIMENTO,NUMERO_CARTA_M
                FROM MOVIMENTO
                WHERE NUMERO_CARTA_M IN (
                    SELECT NUMERO_CARTA
                    FROM CARTA_DI_CREDITO
                    WHERE CF_UTENTE = CODICEFISCALE_)
    )

    LOOP
        IF i.TIPO_MOVIMENTO = 1 THEN
            MOV = 'DEPOSITO';
        ELSE
            MOV = 'PRELIEVO';

        DBMS_OUTPUT.PUT_LINE(MOV || ':' || i.QUANTITA_M || 'Â¢' || ' DATA:' || i.DATA_M || ' ' || ' COMMISSIONI:' || i.FEE_M || ' CARTA:' || i.NUMERO_CARTA_M || ' ID:' || i.ID_ORDINE);
    END LOOP;

END ESTRATTO_CONTO;

/*
    2- ELIMINARE DAL DATABASE TUTTE LE CARTE SCADUTE CHE HANNO DEPOSITATO MENO DI 500 E SONO REGISTRATI SUL CONTO VIRTUALE DA MENO DI UN ANNO
*/
CREATE OR REPLACE PROCEDURE ELIMINARE_CARTE_SCADUTE
IS
    DATACREAZIONE_  DATE;
    TOTDEPOSITI_ NUMBER;
    CONTATORE_ NUMBER;
BEGIN
    FOR i IN
        (
            SELECT NUMERO_CARTA_C,NOME_PIATTAFORMA_C,ID_CONTO_VIRTUALE_C
            FROM COLLEGATO
            WHERE NUMERO_CARTA_C IN (
                SELECT NUMERO_CARTA
                FROM CARTA_DI_CREDITO
                WHERE DATA_DI_SCADENZA < SYSDATE
            )
        )
    LOOP

        SELECT DATA_CREAZIONE
        INTO DATACREAZIONE_
        FROM CONTO_VIRTUALE
        WHERE ID_CONTO_VIRTUALE = i.ID_CONTO_VIRTUALE_C AND NOME_PIATTAFORMA_CV = i.NOME_PIATTAFORMA_C;
        
        TOTDEPOSITI_ := TOTDEPOSITO(i.ID_CONTO_VIRTUALE_C,i.NOME_PIATTAFORMA_C);

        IF TOTDEPOSITI_ < 500 AND ((SYSDATE - DATACREAZIONE_) / 365.25 < 1) THEN
            DELETE FROM CARTA_DI_CREDITO WHERE NUMERO_CARTA = i.NUMERO_CARTA_C;
            DELETE FROM COLLEGATO WHERE NUMERO_CARTA_C = i.NUMERO_CARTA_C AND ID_CONTO_VIRTUALE_C = i.ID_CONTO_VIRTUALE_C AND NOME_PIATTAFORMA_C = i.NOME_PIATTAFORMA_C;
            DBMS_OUTPUT.PUT_LINE('E STATA CANCELLATA LA CARTA NUMERO: ' || i.NUMERO_CARTA_C);
        END IF;
        
        SELECT COUNT(NUMERO_CARTA_C)
        INTO CONTATORE_
        FROM COLLEGATO
        WHERE NUMERO_CARTA_C = i.NUMERO_CARTA_C AND ID_CONTO_VIRTUALE_C = i.ID_CONTO_VIRTUALE_C AND NOME_PIATTAFORMA_C = i.NOME_PIATTAFORMA_C;

        IF CONTATORE_ < 1 THEN
            DELETE FROM CONTO_VIRTUALE WHERE ID_CONTO_VIRTUALE = i.ID_CONTO_VIRTUALE_C AND NOME_PIATTAFORMA_CV = i.NOME_PIATTAFORMA_C;
            DBMS_OUTPUT.PUT_LINE('E STATO CANCELLATO IL CONTO VIRTUALE CON ID: ' || i.ID_CONTO_VIRTUALE_C || ' E NOME: ' || i.NOME_PIATTAFORMA_C);
        END IF;

    END LOOP;

END ELIMINARE_CARTE_SCADUTE;

/*
    3- RICAVO/PERDITA MENSILE
*/

/*
    4- VERIFICA VALIDITA' ACCOUNT
*/

/*
    5- SI VOGLIONO PREMIARE GLI UTENTI CHE HANNO VERSATO DI PIU'
*/
CREATE OR REPLACE PROCEDURE PREMIO
IS
    TOTDEP_ NUMBER;
    MASSIMO NUMBER;
    COD     NUMBER;
    NOM_    VARCHAR(30);
    COGN_    VARCHAR(30);
BEGIN

    SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
    FROM CONTO_VIRTUALE
    FETCH FIRST 1 ROWS ONLY;

    TOTDEP_ := TOTDEPOSITO(ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV);

    FOR i IN (
        SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
        FROM CONTO_VIRTUALE
    )
    LOOP

        TOTDEP_ := TOTDEPOSITO(i.ID_CONTO_VIRTUALE,i.NOME_PIATTAFORMA_CV);

        IF MASSIMO < TOTDEP_ THEN
            MASSIMO := TOTDEP_;
        END IF;

    END LOOP;

    FOR j IN (
        SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
        FROM CONTO_VIRTUALE
    )
    LOOP

        TOTDEP_ := TOTDEPOSITO(i.ID_CONTO_VIRTUALE,i.NOME_PIATTAFORMA_CV);

        SELECT NOME,COGNOME
        INTO NOM_,COGN_
        FROM UTENTE
        WHERE CF = (
            SELECT CF_UTENTE
            FROM CARTA_DI_CREDITO
            WHERE NUMERO_CARTA = (
                SELECT NUMERO_CARTA_C
                FROM COLLEGATO
                WHERE ID_CONTO_VIRTUALE_C = i.ID_CONTO_VIRTUALE AND NOME_PIATTAFORMA_C = i.NOME_PIATTAFORMA_CV;
            )
        )

        IF MASSIMO = TOTDEP_ THEN

            WHILE COD IN SELECT CODICE FROM REWARDS
            LOOP
                COD := CAST((RAND()*(9999-1000)+1000) AS INT);
            END LOOP;

            INSERT INTO REWARDS(CODICE,QUANTITA_R,BLOCKCHAIN_R,CONTRATTO_R,DATA_RILASCIO,NOME_R,NOME_PIATTAFORMA_R,ID_CONTO_VIRTUALE_R) VALUES
            (COD,10,'BSC','0xKaP7e0yhG0X0GHwZJnv7d3Oe0S0DGj6uovM4MDpL',SYSDATE+10000,'BNB',i.NOME_PIATTAFORMA_CV,i.ID_CONTO_VIRTUALE);

            DBMS_OUTPUT.PUT_LINE('CIAO ' || NOM_ || ' ' || COGN_ || 'HAI VINTO UN PREMIO! DOMANI TI VERRA RILASCIATO');
    
    END LOOP;
END PREMIO;

--------------------

DROP PROCEDURE PREMIO;
CREATE OR REPLACE PROCEDURE PREMIO
IS
    TOTDEP_ NUMBER;
    MASSIMO NUMBER;
    COD     CHAR(4);
    NOM_    VARCHAR(30);
    COGN_    VARCHAR(30);
    ID_     VARCHAR(30);
    N_      VARCHAR(30);
    CONTROLLO NUMBER;
BEGIN

    SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
    INTO ID_,N_
    FROM CONTO_VIRTUALE
    FETCH FIRST 1 ROWS ONLY;

    TOTDEP_ := TOTDEPOSITO(ID_,N_);

    FOR i IN (
        SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
        FROM CONTO_VIRTUALE
    )
    LOOP

        TOTDEP_ := TOTDEPOSITO(i.ID_CONTO_VIRTUALE,i.NOME_PIATTAFORMA_CV);

        IF MASSIMO < TOTDEP_ THEN
            MASSIMO := TOTDEP_;
        END IF;

    END LOOP;

    FOR j IN (
        SELECT ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV
        FROM CONTO_VIRTUALE
    )
    LOOP

        TOTDEP_ := TOTDEPOSITO(j.ID_CONTO_VIRTUALE,j.NOME_PIATTAFORMA_CV);

        SELECT NOME,COGNOME
        INTO NOM_,COGN_
        FROM UTENTE
        WHERE CF IN (
            SELECT CF_UTENTE
            FROM CARTA_DI_CREDITO
            WHERE NUMERO_CARTA IN (
                SELECT NUMERO_CARTA_C
                FROM COLLEGATO
                WHERE ID_CONTO_VIRTUALE_C = j.ID_CONTO_VIRTUALE AND NOME_PIATTAFORMA_C = j.NOME_PIATTAFORMA_CV
            )
        );

        IF MASSIMO = TOTDEP_ THEN

            WHILE CONTROLLO = 0
            LOOP
                COD := CAST( (RAND()*(9999-1000)+1000) AS CHAR);
                FOR k IN (
                    SELECT CODICE
                    FROM REWARDS
                )
                LOOP
                    IF COD = k.CODICE THEN
                        CONTROLLO := 0;
            END LOOP;

            FOR k IN (
                SELECT CODICE
                FROM REWARDS
            )
            LOOP 


            INSERT INTO REWARDS(CODICE,QUANTITA_R,BLOCKCHAIN_R,CONTRATTO_R,DATA_RILASCIO,NOME_R,NOME_PIATTAFORMA_R,ID_CONTO_VIRTUALE_R) VALUES
            (COD,10,'BSC','0xKaP7e0yhG0X0GHwZJnv7d3Oe0S0DGj6uovM4MDpL',SYSDATE+10000,'BNB',j.NOME_PIATTAFORMA_CV,j.ID_CONTO_VIRTUALE);

            DBMS_OUTPUT.PUT_LINE('CIAO ' || NOM_ || ' ' || COGN_ || ' HAI VINTO UN PREMIO! DOMANI TI VERRA RILASCIATO');
            
        END IF;
    
    END LOOP;
END PREMIO;

/*
    6- ELIMINAZIONE REWARDS UNA VOLTA CHE SONO STATE RILASCIATE
*/

/*
    FUNCTION TOTALE DEPOSITI
*/
CREATE OR REPLACE FUNCTION TOTDEPOSITO(IDCONTOVIRTUALE IN VARCHAR,NOMEPIATTAFORMA IN VARCHAR)
RETURN NUMBER
IS
    RETURNVALUE NUMBER;
BEGIN

    RETURNVALUE := 0;

    FOR i IN (
        SELECT QUANTITA_M,TIPO_MOVIMENTO
        FROM MOVIMENTO
        WHERE IDCONTOVIRTUALE = ID_CONTO_VIRTUALE_M AND NOMEPIATTAFORMA = NOME_PIATTAFORMA_M
    )
    LOOP
        IF i.TIPO_MOVIMENTO = 1 THEN
            RETURNVALUE := RETURNVALUE + i.QUANTITA_M;
        END IF;
    END LOOP;

    RETURN RETURNVALUE;

END TOTDEPOSITO;

