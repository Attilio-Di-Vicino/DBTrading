/*  1
    L'UTENTE DEVE ESSERE MAGGIORENNE
    TESTATO E FUNZIONANTE
*/
CREATE OR REPLACE TRIGGER VERIFICA_ETA_UTENTE
BEFORE INSERT ON UTENTE
FOR EACH ROW
DECLARE
    MINORENNE EXCEPTION;
BEGIN

    IF (SYSDATE - :NEW.DATA_DI_NASCITA) / 365.25 < 18 THEN
        RAISE MINORENNE;
    END IF;

EXCEPTION
    WHEN MINORENNE 
        THEN :NEW.CF := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_ETA_UTENTE;

/*  2
    ALL'INSERIMENTO DELLA CARTA, ESSA NON DEVE ESSERE SCADUTA
    TESTATO E FUNZIONANTE
*/
CREATE OR REPLACE TRIGGER VERIFICA_CARTA_SCADUTA
BEFORE INSERT ON CONTO_CORRENTE
FOR EACH ROW
DECLARE
    CARTASCADUTA EXCEPTION;
BEGIN

    IF :NEW.DATA_DI_SCADENZA < SYSDATE THEN
        RAISE CARTASCADUTA;
    END IF;

EXCEPTION
    WHEN CARTASCADUTA 
        THEN :NEW.NUMERO_CONTO := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_CARTA_SCADUTA;

/*  3
    CONTROLLO SALDO MOVIMENTO PRELIEVO
    DA CONTROLLARE
*/
CREATE OR REPLACE TRIGGER CONTROLLO_PRELIEVO
BEFORE INSERT ON MOVIMENTO
FOR EACH ROW
DECLARE
    SALDO_NON_SUFFICIENTE   EXCEPTION;
    SALDO   NUMBER;
    QUA_FEE NUMBER;
    GAS     NUMBER;
    TIPO    NUMBER;
BEGIN
    SALDO := 0;

    IF :NEW.TIPO_MOVIMENTO = 2 THEN

        SELECT QUANTITA,FEE,TIPO_MOVIMENTO
        INTO QUA_FEE,GAS,TIPO
        FROM MOVIMENTO
        WHERE ID_CONTO_VIRTUALE_M = :NEW.ID_CONTO_VIRTUALE_M;

        IF TIPO = 1 THEN
            SALDO := SALDO + (QUA_FEE - GAS);
        ELSE 
            SALDO := SALDO - QUA_FEE;
        END IF;

    END IF;

    IF :NEW.QUANTITA > SALDO THEN 
        RAISE SALDO_NON_SUFFICIENTE;
    END IF;

    EXCEPTION WHEN SALDO_NON_SUFFICIENTE THEN
        :NEW.ID_ORDINE := NULL;
END CONTROLLO_PRELIEVO;

/*  4
    LA DATA DELLA REWARDS DEVE ESSERE SUCCESSIVA ALLA DATA DI CREAZIONE DEL CONTO VIRTUALE
    TESTATO E FUNZIONANTE
*/
CREATE OR REPLACE TRIGGER CONTROLLO_DATA_REWARDS
BEFORE INSERT ON REWARDS
FOR EACH ROW
DECLARE
    DATA_NON_ACCETTATA EXCEPTION;
    DATACREAZIONE      DATE;
BEGIN

    SELECT DATA_CREAZIONE
    INTO DATACREAZIONE
    FROM CONTO_VIRTUALE
    WHERE ID = :NEW.ID_CONTO_VIRTUALE_R;

    IF :NEW.DATA_RILASCIO < DATACREAZIONE THEN
        RAISE   DATA_NON_ACCETTATA;
    END IF;

    EXCEPTION WHEN DATA_NON_ACCETTATA THEN
        :NEW.CODICE := NULL;
END CONTROLLO_DATA_REWARDS;

/*
    5
    ALL'INSERIMENTO DELLA CARTA NEL CONTO VIRTUALE ESSA DEVE ESISTERE
    TESTATO E FUNZIONANTE
*/
CREATE OR REPLACE TRIGGER CONTROLLO_ESISTENZA_CARTA
BEFORE INSERT ON COLLEGATO
FOR EACH ROW
DECLARE
    NON_ESISTE  EXCEPTION;
    NCARTA      CHAR(16);
BEGIN

    SELECT NUMERO_CONTO
    INTO NCARTA
    FROM CONTO_CORRENTE
    WHERE NUMERO_CONTO = :NEW.NUMERO_CONTO_C;

    IF NCARTA = NULL THEN
    RAISE NON_ESISTE;
    END IF;

    EXCEPTION WHEN NON_ESISTE THEN
    :NEW.ID_CONTO_VIRTUALE_C := NULL;

END CONTROLLO_ESISTENZA_CARTA;

/*  6
    DEVE CONTROLLARE PER UN CONTO VIRTUALE TUTTE LE CARTE COLLEGATE DEVONO ESSERE DI UN UTENTE
    TRIGGER CHE CONTROLLA SE, ALL'INSERIMENTO DI UN CONTO VIRTUALE, TUTTE LE CARTE COLLEGATE AD ESSO
    SIANO DELLO STESSO UTENTE
*/

CREATE OR REPLACE TRIGGER VERIFA_CARTE_SU_CONTO_VIRTUALE
BEFORE INSERT ON COLLEGATO
FOR EACH ROW
DECLARE
    PIU_UTENTI  EXCEPTION;
    NCARTA      CHAR(16);
    CFUTENTE    CHAR(16);
    ARR as VARCHAR(16);
BEGIN

    SELECT NUMERO_CONTO_C
    INTO NCARTA
    FROM COLLEGATO
    WHERE ID_CONTO_VIRTUALE_C = :NEW.ID_CONTO_VIRTUALE_C;

    FOR r IN (
        SELECT COUNT(*)CF_UTENTE
        INTO CFUTENTE
        FROM CONTO_CORRENTE
        WHERE NCARTA = NUMERO_CONTO
    )
    LOOP
        SET ARR(r) = CFUTENTE;
    END LOOP;

    FOR r2 IN (
        COUNT(*)
    )
    LOOP
        IF ARR(r2) <> ARR(r2+1) THEN
            RAISE   PIU_UTENTI;
        END IF;
    END LOOP;

    EXCEPTION
        WHEN PIU_UTENTI THEN
            :NEW.ID_CONTO_VIRTUALE_C := NULL;

END VERIFA_CARTE_SU_CONTO_VIRTUALE;

-- RIPROVA
CREATE OR REPLACE TRIGGER VERIFA_CARTE_SU_CONTO_VIRTUALE
BEFORE INSERT ON COLLEGATO
FOR EACH ROW
DECLARE PIU_UTENTI  EXCEPTION;
DECLARE NCARTA      CHAR(16);
DECLARE CFUTENTE    CHAR(16);
DECLARE ARR as VARCHAR(16);
BEGIN

    SELECT NUMERO_CONTO_C
    INTO NCARTA
    FROM COLLEGATO
    WHERE ID_CONTO_VIRTUALE_C = :NEW.ID_CONTO_VIRTUALE_C;

    SELECT COUNT(*)CF_UTENTE
    INTO CFUTENTE
    FROM CONTO_CORRENTE
    WHERE NCARTA = NUMERO_CONTO

    FOR r2 IN (
        COUNT(*)
    );
    LOOP
        IF ARR(r2) <> ARR(r2+1) THEN
            RAISE   PIU_UTENTI;
        END IF;
    END LOOP;

    EXCEPTION
        WHEN PIU_UTENTI THEN
            :NEW.ID_CONTO_VIRTUALE_C := NULL;

END VERIFA_CARTE_SU_CONTO_VIRTUALE;

--riprova
CREATE OR REPLACE TRIGGER NNN
BEFORE INSERT ON COLLEGATO
FOR EACH ROW
DECLARE
    PIU_UTENTI  EXCEPTION;
    NCARTA      CHAR(16);
    NCFUTENTE    NUMBER;
BEGIN

    SELECT NUMERO_CONTO_C
    INTO NCARTA
    FROM COLLEGATO
    WHERE ID_CONTO_VIRTUALE_C = :NEW.ID_CONTO_VIRTUALE_C;

    SELECT COUNT(CF_UTENTE)
    INTO NCFUTENTE
    FROM CONTO_CORRENTE
    WHERE NUMERO_CONTO = NCARTA;

    IF NCFUTENTE >= 2 THEN
        RAISE PIU_UTENTI;
    END IF;

EXCEPTION WHEN PIU_UTENTI THEN
    :NEW.ID_CONTO_VIRTUALE_C := NULL;

END NNN;


-- DELL' ID MI INTERESSA TUTTI I CF E NUMERI CONTI COLLEGATI AD ESSI
SELECT CF_UTENTE,NUMERO_CONTO
    FROM CONTO_CORRENTE
        WHERE NUMERO_CONTO = (SELECT NUMERO_CONTO_C 
                                FROM COLLEGATO 
                                    WHERE ID_CONTO_VIRTUALE_C = (SELECT CV.ID 
                                                                    FROM CONTO_VIRTUALE CV
                                                                        WHERE CV.ID = '49273856346937903118'));

SELECT COUNT(CF_UTENTE)
    FROM CONTO_CORRENTE
        WHERE NUMERO_CONTO IN (SELECT NUMERO_CONTO_C 
                                FROM COLLEGATO 
                                    WHERE ID_CONTO_VIRTUALE_C IN (SELECT CV.ID 
                                                                    FROM CONTO_VIRTUALE CV
                                                                        WHERE CV.ID = '49273856346937903118'));

/*  7
    I CONTI CORRENTI DA CUI PRELEVIAMO I SOLDI SONO TRA UNA DELLE MODALITA' DI PAGAMENTO COLLEGATE A QUEL CONTO VIRTUALE DA CUI STIAMO FACENDO IL MOVIMENTO
*/

/*
    EVENTUALI TRIGGER SU OPERAZIONE CHE ANCORA DOBBIAMO FARE EER
*/