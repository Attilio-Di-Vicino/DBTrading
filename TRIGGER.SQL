/*
    L'UTENTE DEVE ESSERE MAGGIORENNE
*/
CREATE OR REPLACE TRIGGER VERIFICAETAUTENTE
BEFORE INSERT ON UTENTE
FOR EACH ROW
DECLARE
    MINORENNE EXCEPTION;
BEGIN

    IF (SYSDATE - :NEW.DATA_DI_NASCITA) / 365.25 < 18 THEN
        RAISE MINORENNE;
    END IF;

EXCEPTION
    WHEN MINORENNE 
        THEN :NEW.CF := NULL; -- BLOCCO INSERIMENTO

END VERIFICAETAUTENTE;

/*
    ALL'INSERIMENTO DELLA CARTA, ESSA NON DEVE ESSERE SCADUTA
*/
CREATE OR REPLACE TRIGGER VERIFICACARTASCADUTA
BEFORE INSERT ON CONTO_CORRENTE
FOR EACH ROW
DECLARE
    CARTASCADUTA EXCEPTION;
BEGIN

    IF :NEW.DATA_DI_SCADENZA < SYSDATE THEN
        RAISE CARTASCADUTA;
    END IF;

EXCEPTION
    WHEN CARTASCADUTA 
        THEN :NEW.NUMERO_CONTO := NULL; -- BLOCCO INSERIMENTO

END VERIFICACARTASCADUTA;

/*
    LA DATA DI CREAZIONE DEL CONTO VIRTUALE
    DEVE ESSERE MAGGIORE DI 18 ANNI DELLA DATA DI NASCITA DELL'UTENTE
*/
CREATE OR REPLACE TRIGGER VERIFICA_DATA_CONTO_VIRTUALE
BEFORE INSERT ON CONTO_VIRTUALE
FOR EACH ROW
DECLARE
    ERRORE              EXCEPTION;
    DATA_DI_NASCITA_    DATE;
    ID_                  VARCHAR(30);
BEGIN

    SELECT  ID 
    INTO    ID_
    FROM CONTO_VIRTUALE
    WHERE CONTO_VIRTUALE.ID = :NEW.ID_; 

    IF ID_ != NULL THEN

        SELECT DATA_DI_NASCITA
        INTO DATA_DI_NASCITA_
        FROM UTENTE 
        WHERE CF = (SELECT CF_UTENTE FROM CONTO_CORRENTE WHERE NUMERO_CONTO = (SELECT NUMERO_CONTO_C FROM COLLEGATO WHERE 
        ID_CONTO_VIRTUALE_C = (SELECT ID FROM CONTO_VIRTUALE WHERE ID = ID_)));

        IF (DATA_CREAZIONE - DATA_DI_NASCITA_) / 365.25 < 18
            RAISE ERRORE;
        END IF;

    END IF;

EXCEPTION
    WHEN ERRORE 
        THEN :NEW.ID := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_DATA_CONTO_VIRTUALE;

/*
    CONTROLLO SALDO MOVIMENTO DA MODIFICARE
*/
CREATE OR REPLACE TRIGGER CONTROLLO_SALDO
BEFORE INSERT ON MOVIMENTO
FOR EACH ROW
--DECLARE     SALDO   NUMBER;
BEGIN
    IF 1000 < :NEW.QUANTITA
    THEN 
        RAISE_APPLICATION_ERROR(-2061,'SALDO NON SUFFICIENTE');
    END IF;
END;



/**/

CREATE OR REPLACE TRIGGER VERIFICA_DATA_CONTO_VIRTUALE
BEFORE INSERT ON CONTO_VIRTUALE
FOR EACH ROW
DECLARE
    ERRORE              EXCEPTION;
    DATA_DI_NASCITA_    DATE;
    ID_                  VARCHAR(30);
BEGIN

    SELECT  ID 
    INTO    ID_
    FROM CONTO_VIRTUALE
    WHERE CONTO_VIRTUALE.ID = :NEW.ID; 

    IF ID_ != NULL THEN

        SELECT DATA_DI_NASCITA
        INTO DATA_DI_NASCITA_
        FROM UTENTE 
        WHERE CF = (SELECT CF_UTENTE FROM CONTO_CORRENTE WHERE NUMERO_CONTO = (SELECT NUMERO_CONTO_C FROM COLLEGATO WHERE 
        ID_CONTO_VIRTUALE_C = (SELECT ID FROM CONTO_VIRTUALE WHERE ID = ID_)));

        IF (:NEW.DATA_CREAZIONE - DATA_DI_NASCITA_) / 365.25 < 18 THEN
            RAISE ERRORE;
        END IF;

    END IF;

EXCEPTION
    WHEN ERRORE 
        THEN :NEW.ID := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_DATA_CONTO_VIRTUALE;

/**/

CREATE OR REPLACE TRIGGER VERIFICA_DATA_CONTO_VIRTUALE
BEFORE INSERT ON CONTO_VIRTUALE
FOR EACH ROW
DECLARE
    PRONTO EXCEPTION;
    DATA_DI_NASCITA_    DATE;

BEGIN

        SELECT DATA_DI_NASCITA
        INTO DATA_DI_NASCITA_
        FROM UTENTE 
        WHERE CF = (SELECT CF_UTENTE FROM CONTO_CORRENTE WHERE NUMERO_CONTO = (SELECT NUMERO_CONTO_C FROM COLLEGATO WHERE 
        ID_CONTO_VIRTUALE_C = (SELECT ID FROM CONTO_VIRTUALE WHERE ID = :NEW.ID)));
        
        IF DATA_DI_NASCITA_ != NULL THEN

            IF (:NEW.DATA_CREAZIONE - DATA_DI_NASCITA_) / 365.25 < 18 THEN
                RAISE PRONTO;
            END IF;

        END IF;

EXCEPTION
    WHEN PRONTO 
        THEN :NEW.ID := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_DATA_CONTO_VIRTUALE;

/*******************************************************************/

CREATE OR REPLACE TRIGGER VERIFICA_DATA_CONTO_VIRTUALE
BEFORE INSERT ON CONTO_VIRTUALE
FOR EACH ROW
DECLARE
    PRONTO EXCEPTION;
    NUMERO_CONTO_C_ VARCHAR(30);
    CF1 CHAR(16);
    DATA_DI_NASCITA_    DATE;

BEGIN

        SELECT NUMERO_CONTO_C
        INTO NUMERO_CONTO_C_
        FROM COLLEGATO
        WHERE ID_CONTO_VIRTUALE_C = :NEW.ID;

        SELECT CF_UTENTE
        INTO CF1
        FROM CONTO_CORRENTE
        WHERE NUMERO_CONTO = NUMERO_CONTO_C;

        SELECT DATA_DI_NASCITA
        INTO DATA_DI_NASCITA_
        FROM UTENTE
        WHERE CF1 = CF;

        IF (:NEW.DATA_CREAZIONE - DATA_DI_NASCITA_) / 365.25 < 18 THEN
            RAISE PRONTO;
        END IF;

EXCEPTION
    WHEN PRONTO 
        THEN :NEW.ID := NULL; -- BLOCCO INSERIMENTO

END VERIFICA_DATA_CONTO_VIRTUALE;
    