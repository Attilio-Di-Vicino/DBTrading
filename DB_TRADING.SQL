DROP TABLE UTENTE cascade constraints;
DROP TABLE VALUTAZIONE_RISCHIO;
DROP TABLE CONTO_CORRENTE cascade constraints;
DROP TABLE COLLEGATO;
DROP TABLE CONTO_VIRTUALE cascade constraints;
DROP TABLE MOVIMENTO;
DROP TABLE WALLET_DECENTRALIZZATO cascade constraints;
DROP TABLE EXCHANGE_DECENTRALIZZATO cascade constraints;
DROP TABLE REWARDS;
DROP TABLE PIATTAFORMA_EXCHANGE;
DROP TABLE OPERAZIONE cascade constraints;
DROP TABLE ACQUISTO;
DROP TABLE VENDITA;

CREATE TABLE UTENTE(
    CF              CHAR(16)    NOT NULL PRIMARY KEY,
    DATA_DI_NASCITA DATE        NOT NULL,
    NAZIONALITA     VARCHAR(20) NOT NULL,
    NOME            VARCHAR(20) NOT NULL,
    COGNOME         VARCHAR(20) NOT NULL
);

CREATE TABLE VALUTAZIONE_RISCHIO(
    CATEGORIA   VARCHAR(15) NOT NULL, -- CHIAVE DEBOLE 
    BUDGET      NUMBER(9,0) NOT NULL, -- FINO A 9 NUMERI RAPPRESENTABILI
    RISCHIO     NUMBER(2,0) NOT NULL, -- NON PUO' AVERE IL 100% DI RISCHIO (VALORE ESPRESSO IN %) --CHECK RISCHIO < 100
    CF_UTENTE   CHAR(16)    NOT NULL, -- CHIAVE ESTERNA

    CONSTRAINT  PK_VALUTAZIONE_RISCHIO PRIMARY KEY(CATEGORIA,CF_UTENTE),
    CONSTRAINT  FK_UTENTE FOREIGN KEY (CF_UTENTE) REFERENCES UTENTE(CF) ON DELETE CASCADE,
    CONSTRAINT  CATEGORIE_AMMESSE CHECK ( (CATEGORIA) IN ('INTRADAY','SCALPER','BUY & HOLD') )
);

CREATE TABLE CONTO_CORRENTE(
    NUMERO_CARTA        CHAR(16)    NOT NULL PRIMARY KEY,
    CVV                 CHAR(3)     NOT NULL UNIQUE,
    DATA_DI_SCADENZA    DATE        NOT NULL,
    BANCA               VARCHAR(20) NOT NULL,
    CF_UTENTE           CHAR(16)    NOT NULL, -- CHIAVE ESTERNA

    CONSTRAINT  FK_UTENTE2 FOREIGN KEY (CF_UTENTE) REFERENCES UTENTE(CF) ON DELETE CASCADE
);

CREATE TABLE CONTO_VIRTUALE(
    ID_CONTO_VIRTUALE   VARCHAR(30) NOT NULL, -- VARCHAR(30) PERCHE POSSIAMO AVERE ID DIVERSI DI PIATTAFORME DIVERSE
    NOME_PIATTAFORMA_CV VARCHAR(20) NOT NULL,
    DATA_CREAZIONE      DATE        NOT NULL

    CONSTRAINT PK_CONTO_VIRTUALE PRIMARY KEY (ID_CONTO_VIRTUALE,NOME_PIATTAFORMA_CV),
    CONSTRAINT FK_PIATTAFORMA FOREIGN KEY (NOME_PIATTAFORMA_CV) REFERENCES PIATTAFORMA_EXCHANGE(NOME_PIATTAFORMA) ON DELETE CASCADE
);

CREATE TABLE COLLEGATO(
    ID_CONTO_VIRTUALE_C   VARCHAR(30)   NOT NULL, -- PRIMARY KEY -- CHIAVE ESTERNA ??
    NUMERO_CARTA_C        CHAR(16)      NOT NULL,    -- PRIMARY KEY -- CHIAVE ESTERNA ??
    NOME_PIATTAFORMA_C    VARCHAR(20)   NOT NULL

    CONSTRAINT  PK_COLLEGATO PRIMARY KEY (ID_CONTO_VIRTUALE_C,NUMERO_CARTA_C,NOME_PIATTAFORMA_C),
    CONSTRAINT  FK_ID FOREIGN KEY (ID_CONTO_VIRTUALE_C) REFERENCES CONTO_VIRTUALE(ID) ON DELETE CASCADE,
    CONSTRAINT  FK_NUMERO_CONTO FOREIGN KEY (NUMERO_CARTA_C) REFERENCES CONTO_CORRENTE(NUMERO_CARTA) ON DELETE CASCADE,
    CONSTRAINT  FK_PIATTAFORMA_E FOREIGN KEY (NOME_PIATTAFORMA_C) REFERENCES PIATTAFORMA_EXCHANGE(NOME_PIATTAFORMA) ON DELETE CASCADE
);

CREATE TABLE MOVIMENTO(
    ID_ORDINE               CHAR(20)        NOT NULL PRIMARY KEY,
    QUANTITA_M              NUMBER(9,2)     NOT NULL,
    DATA_M                  DATE            NOT NULL, -- MODIFICARE UML E EE/R
    FEE_M                   NUMBER(2,2)     NOT NULL, -- FINO 99,99
    TIPO_MOVIMENTO          NUMBER(1,0)     NOT NULL, -- PUO ESSERE SOLO 1 = DEPOSITO / 2 = PRELIEVO
    ID_CONTO_VIRTUALE_M     VARCHAR(30)     NOT NULL, -- CHIAVE ESTERNA
    NUMERO_CARTA_M          CHAR(16)        NOT NULL, -- CHIAVE ESTERNA
    NOME_PIATTAFORMA_M      VARCHAR(20)     NOT NULL,


    CONSTRAINT  FK_ID_CONTO_VIRTUALE FOREIGN KEY (ID_CONTO_VIRTUALE_M) REFERENCES CONTO_VIRTUALE(ID) ON DELETE CASCADE,
    CONSTRAINT  FK_CONTO_CORRENTE FOREIGN KEY (NUMERO_CARTA_M) REFERENCES CONTO_CORRENTE(NUMERO_CARTA) ON DELETE CASCADE,
    CONSTRAINT  FK_PIATTAFORMA_M FOREIGN KEY (NOME_PIATTAFORMA_M) REFERENCES PIATTAFORMA_EXCHANGE(NOME_PIATTAFORMA) ON DELETE CASCADE,
    CONSTRAINT  MOVIMENTO_CONSENTITO CHECK ( QUANTITA <> 0 ),
    CONSTRAINT  TIPO_MOVIMENTO_CONSENTITO CHECK ( (TIPO_MOVIMENTO = 1) OR (TIPO_MOVIMENTO = 2) )
);

CREATE TABLE WALLET_DECENTRALIZZATO(
    INDIRIZZO    CHAR(42)    PRIMARY KEY,
    NOME_WALLET  VARCHAR(20) NOT NULL,
    BLOCKCHAIN1  VARCHAR(20),
    BLOCKCHAIN2  VARCHAR(20),
    BLOCKCHAIN3  VARCHAR(20),
    BLOCKCHAIN4  VARCHAR(20),
    BLOCKCHAIN5  VARCHAR(20)
);


CREATE TABLE EXCHANGE_DECENTRALIZZATO(
    NOME_EXCHANGE    VARCHAR(20)    NOT NULL,
    BLOCKCHAIN       VARCHAR(20)    NOT NULL,
    INDIRIZZO_E      CHAR(42)       NOT NULL,

    CONSTRAINT PK_EXDEX PRIMARY KEY(NOME_EXCHANGE,INDIRIZZO_E),
    CONSTRAINT FK_INDIRIZZO_E FOREIGN KEY(INDIRIZZO_E) REFERENCES WALLET_DECENTRALIZZATO(INDIRIZZO) ON DELETE CASCADE
    
);


CREATE TABLE REWARDS(
    CODICE              CHAR(4)         NOT NULL PRIMARY KEY,
    QUANTITA_R          NUMBER(9,0)     NOT NULL,
    BLOCKCHAIN_R        VARCHAR(20),
    CONTRATTO_R         CHAR(42)        NOT NULL,
    DATA_RILASCIO       DATE            NOT NULL,
    NOME_R              VARCHAR(20),
    ID_CONTO_VIRTUALE_R VARCHAR(30)     NOT NULL, -- CHIAVE ESTERNA
    NOME_PIATTAFORMA_R  VARCHAR(20)     NOT NULL,

    CONSTRAINT  FK_ID_CONTO_VIRTUALE_R FOREIGN KEY (ID_CONTO_VIRTUALE_R) REFERENCES CONTO_VIRTUALE(ID) ON DELETE CASCADE
    CONSTRAINT  FK_PIATTAFORMA_R FOREIGN KEY (NOME_PIATTAFORMA_R) REFERENCES PIATTAFORMA_EXCHANGE(NOME_PIATTAFORMA) ON DELETE CASCADE
);

CREATE TABLE PIATTAFORMA_EXCHANGE(
    NOME_PIATTAFORMA    VARCHAR(20)     NOT NULL PRIMARY KEY,
    TOKEN_RIFERIMENTO   VARCHAR(20)
);

CREATE TABLE OPERAZIONE(
    TX_HASH             CHAR(66)    PRIMARY KEY,
    PREZZO              NUMBER(9,0) NOT NULL, -- VALUTARE TIPO NUMBER 
    NOME_PROGETTO       VARCHAR(20),
    CONTRATTO_O         CHAR(42)    NOT NULL,
    QUANTITA_O          NUMBER(9,0) NOT NULL,
    DATA_O              DATE        NOT NULL,
    ID_CONTO_VIRTUALE_O VARCHAR(30),          -- CHIAVE ESTERNA

    CONSTRAINT  FK_ID_CONTO_VIRTUALE_O FOREIGN KEY (ID_CONTO_VIRTUALE_O) REFERENCES CONTO_VIRTUALE(ID) ON DELETE CASCADE
);

CREATE TABLE ACQUISTO(
    TX_HASH_A   CHAR(66),   -- CHIAVE ESTERNA
    FROM_A      CHAR(42)    NOT NULL,

    CONSTRAINT FK_TX_HASH_A FOREIGN KEY (TX_HASH_A) REFERENCES OPERAZIONE(TX_HASH) ON DELETE CASCADE
);

CREATE TABLE VENDITA(
    TX_HASH_V   CHAR(66),   -- CHIAVE ESTERNA
    TO_v        CHAR(42)    NOT NULL,

    CONSTRAINT FK_TX_HASH_V FOREIGN KEY (TX_HASH_V) REFERENCES OPERAZIONE(TX_HASH) ON DELETE CASCADE
);